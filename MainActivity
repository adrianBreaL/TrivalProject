package com.example.android.androidquiz;

import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.media.Image;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RadioGroup;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;

import org.w3c.dom.Text;

import static android.R.attr.name;
import static android.R.attr.x;
import static com.example.android.androidquiz.R.string.prog;
import static com.example.android.androidquiz.R.string.result;

public class MainActivity extends AppCompatActivity {
    int[] progress = {0,0,0,0,0,0};
    int gmedals = 0;
    boolean flag, ryear = false;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        SeekBar skb = (SeekBar) findViewById(R.id.seekbar);
        final TextView txt = (TextView) findViewById(R.id.year);
        skb.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                switch (progress){
                    case 0:
                        txt.setText("1910");
                        ryear = false;
                        break;
                    case 1:
                        txt.setText("1911");
                        ryear = false;
                        break;
                    case 2:
                        txt.setText("1912");
                        ryear = false;
                        break;
                    case 3:
                        txt.setText("1913");
                        ryear = false;
                        break;
                    case 4:
                        txt.setText("1914");
                        ryear = true;
                        break;
                    case 5:
                        txt.setText("1915");
                        ryear = false;
                        break;
                    case 6:
                        txt.setText("1916");
                        ryear = false;
                        break;
                    case 7:
                        txt.setText("1917");
                        ryear = false;
                        break;
                    case 8:
                        txt.setText("1918");
                        ryear = false;
                        break;
                    case 9:
                        txt.setText("1919");
                        ryear = false;
                        break;
                    case 10:
                        txt.setText("1920");
                        ryear = false;
                        break;
                }
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });
    }
    //    @AnswerEntertainment: checks answer, shows a Toast and changes brick color if correct
    public void AnswerEntertainment(View view){
        int result = 0;
        CheckBox box1 = (CheckBox) findViewById(R.id.ope1);
        box1.isChecked();
        CheckBox box2 = (CheckBox) findViewById(R.id.ope2);
        box2.isChecked();
        CheckBox box3 = (CheckBox) findViewById(R.id.ope3);
        box3.isChecked();
        CheckBox box4 = (CheckBox) findViewById(R.id.ope4);
        box4.isChecked();
        if(box1.isChecked() && box2.isChecked() && box4.isChecked()){
            progress[0]=1;
            Toast.makeText(this,getString(R.string.right),Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.entertainment);
            Img.setImageResource(R.drawable.colorupleft);
        }else{
            progress[0]=0;
            Toast.makeText(this,getString(R.string.wrong),Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.entertainment);
            Img.setImageResource(R.drawable.upleft);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    //    @AnswerArt: checks answer, shows a Toast and changes brick color if correct
    public void AnswerArt(View view){
        int result = 0;
        RadioGroup rg = (RadioGroup) findViewById(R.id.radiog);
        if (rg.getCheckedRadioButtonId() == R.id.opa3){
            progress[1]=1;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.art);
            Img.setImageResource(R.drawable.colorupright);
        }else{
            progress[1]=0;
            Toast.makeText(this, getString(R.string.wrong), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.art);
            Img.setImageResource(R.drawable.upright);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    //    @AnswerSport: checks answer, shows a Toast and changes brick color if correct
    public void AnswerSport(View view){
        int result = 0;
        TextView medals = (TextView) findViewById(R.id.medals);
        int gold = Integer.parseInt(medals.getText().toString());
        if (gold == 8){
            progress[2]=1;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.sports);
            Img.setImageResource(R.drawable.colormedleft);
        }else{
            progress[2]=0;
            Toast.makeText(this, getString(R.string.wrong), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.sports);
            Img.setImageResource(R.drawable.medleft);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    // @minus: substracts 1 to gold medals number
    public void minus(View view){
        if(gmedals > 0){
            gmedals = gmedals - 1;
            TextView txt = (TextView) findViewById(R.id.medals);
            txt.setText("" + gmedals);
        }
    }
    // @more: adds 1 to gold medals number
    public void more(View view){
        if(gmedals < 12){
            gmedals = gmedals + 1;
            TextView txt = (TextView) findViewById(R.id.medals);
            txt.setText("" + gmedals);
        }else{
            Toast.makeText(this,"Don\'t you think they\'re too many?;)",Toast.LENGTH_SHORT).show();
        }
    }
    //    @AnswerScience: checks answer, shows a Toast and changes brick color if correct
    public void AnswerScience(View view){
        int result = 0;
        EditText etxt = (EditText) findViewById(R.id.scieq);
        String name = etxt.getText().toString();
        if (name.equals("Newton")|| name.equals("Isaac Newton")){
            progress[3]=1;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.science);
            Img.setImageResource(R.drawable.colormedright);
        }else{
            progress[3]=0;
            Toast.makeText(this, getString(R.string.wrong), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.science);
            Img.setImageResource(R.drawable.medright);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    //    @AnswerHistory: checks answer, shows a Toast and changes brick color if correct
    public void AnswerHistory(View view){
        int result = 0;
        if(ryear){
            progress[4]=1;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.history);
            Img.setImageResource(R.drawable.colordownleft);
        }
        else{
            progress[4]=0;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.history);
            Img.setImageResource(R.drawable.downleft);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    //    @AnswerGeography: checks answer, shows a Toast and changes brick color if correct
    public void AnswerGeography(View view){
        int result = 0;
        if (flag == true){
            progress[5]=1;
            Toast.makeText(this, getString(R.string.right), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.geography);
            Img.setImageResource(R.drawable.colordownright);
        }else{
            progress[5]=0;
            Toast.makeText(this, getString(R.string.wrong), Toast.LENGTH_SHORT).show();
            ImageView Img = (ImageView) findViewById(R.id.geography);
            Img.setImageResource(R.drawable.downright);
        }
        for(int i=0; i<progress.length;i++){
            result = result + progress[i];
        }
        TextView txt = (TextView) findViewById(R.id.progress);
        txt.setText(getString(R.string.newresult,result));
    }
    // @flag: selected  flag
    public boolean flag(View view){
        ImageButton Imgbtt = (ImageButton) view;
        int colorId = Imgbtt.getSolidColor();
        if(colorId == Color.BLACK){
            Imgbtt.setBackgroundColor(Color.GREEN);
        }else{
            Imgbtt.setBackgroundColor(Color.BLACK);
        }
        ImageButton Imgspa = (ImageButton) findViewById(R.id.spa);
        ImageButton Imggb = (ImageButton) findViewById(R.id.gbr);
        ImageButton Imgale = (ImageButton) findViewById(R.id.ale);
        ImageButton Imgit = (ImageButton) findViewById(R.id.ita);
        int colorsp = Imgspa.getSolidColor();
        int colorgb = Imggb.getSolidColor();
        int colorale = Imgale.getSolidColor();
        int colorit = Imgit.getSolidColor();
        if((colorsp == Color.GREEN) && (colorgb == Color.BLACK) && (colorale == Color.BLACK) && (colorit == Color.BLACK)) {
            flag = true;
        }else{
            flag = false;
        }
        return flag;
    }
}
